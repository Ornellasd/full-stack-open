const supertest = require('supertest')
const mongoose = require('mongoose')
const app = require('../app')
const api = supertest(app)

const Blog = require('../models/blog')

test('all notes are returned', async () => {
  const response = await api.get('/api/blogs')

  expect(response.body).toHaveLength(response.body.length)
})

test('identifier is named "id"', async () => {
  const response = await api.get('/api/blogs')
  
  expect(response.body[0]._id).toBeDefined()
})

test('HTTP post creates post', async () => {
  const response = await api.get('/api/blogs')
  const initialLength = response.body.length

  const blog = new Blog({
    title: 'Auto generated by jest test',
    author: 'David O.',
    url: 'www.ornell.as',
    likes: 420
  })

  const newBlog = await blog.save()
  const newResponse = await api.get('/api/blogs')
  const newLength = newResponse.body.length

  expect(newLength).toBe(initialLength + 1)
})

test('likes is zero if missing', async () => {
  const newBlog = {
    title: 'Change likes to zero test',
    author: 'David O.',
    url: 'www.ornell.as'
  }

  const test = await api
    .post('/api/blogs')
    .send(newBlog)
  
  expect(test.body.likes).toBe(0)
  
})

afterAll(() => {
  mongoose.connection.close()
})